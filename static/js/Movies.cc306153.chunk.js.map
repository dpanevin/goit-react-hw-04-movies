{"version":3,"sources":["utils/MoviesApi.js","components/Movies/Movies.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Movies/Movies.jsx"],"names":["BASE_URL","API_KEY","moviesApi","this","searchQuery","page","totalResults","currentRequest","a","url","fetch","response","json","movies","total_results","console","log","genres","query","id","movie","info","cast","reviews","results","newQuery","module","exports","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","Movies","location","useLocation","history","useHistory","useState","setQuery","setMovies","request","URLSearchParams","search","get","onSubmit","fetchMoviesByQuery","useEffect","className","styles","SearchForm","e","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","value","map","movieLink","to","pathname","state","from","title"],"mappings":"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","file":"static/js/Movies.cc306153.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '925491183043d455ae6efbd6833f46c6';\n\nclass MoviesApi {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.totalResults = null;\n    this.currentRequest = null;\n  }\n\n  async fetchTrendingMovies() {\n    this.currentRequest = 'trending';\n    const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=${this.page}&language=ru`;\n\n    try {\n      const response = await fetch(url);\n      const movies = await response.json();\n      this.totalResults = movies.total_results;\n      this.currentRequest = 'trending';\n      return movies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  //---genres---\n  async fetchGenres() {\n    // const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=ru`;\n    const url = `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=ru`;\n\n    try {\n      const response = await fetch(url);\n      const genres = response.json();\n      return genres;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  //------------\n\n  async fetchMoviesByQuery(query) {\n    this.currentRequest = 'search';\n    this.searchQuery = query;\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&language=ru&page=${this.page}&include_adult=false&query=${this.searchQuery}`;\n\n    try {\n      const response = await fetch(url);\n      const movies = await response.json();\n      this.totalResults = movies.total_results;\n      this.currentRequest = 'search';\n      return movies;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieById(id) {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=ru&external_source=imdb_id`;\n\n    try {\n      const response = await fetch(url);\n      const movie = response.json();\n      return movie;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieCast(id) {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=ru`;\n\n    try {\n      const response = await fetch(url);\n      const info = await response.json();\n      const cast = info.cast;\n      return cast;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchMovieReviews(id) {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en`;\n\n    try {\n      const response = await fetch(url);\n      const info = await response.json();\n      const reviews = info.results;\n      return reviews;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n\nconst moviesApi = new MoviesApi();\n\nexport default moviesApi;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"Movies_SearchForm__2iyXf\",\"SearchFormButton\":\"Movies_SearchFormButton__1al34\",\"SearchFormButtonLabel\":\"Movies_SearchFormButtonLabel__3wCnp\",\"SearchFormInput\":\"Movies_SearchFormInput__3IRDd\",\"movieLink\":\"Movies_movieLink__1OhCf\"};","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useEffect } from 'react/cjs/react.development';\nimport moviesApi from 'utils/MoviesApi';\nimport styles from './Movies.module.css';\n\nexport default function Movies() {\n  const location = useLocation();\n  const history = useHistory();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const request = new URLSearchParams(location.search).get('query');\n\n  useEffect(() => {\n    if (movies || !request) {\n      return;\n    }\n\n    onSubmit(request);\n  }, [movies, request]);\n\n  function onChange(e) {\n    setQuery(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Введите поисковый запрос.');\n      return;\n    }\n    history.push({\n      ...location,\n      search: `query=${query}`,\n    });\n\n    onSubmit(query);\n    setQuery('');\n  }\n\n  async function onSubmit(query) {\n    const response = await moviesApi.fetchMoviesByQuery(query);\n\n    setMovies(response.results);\n  }\n\n  return (\n    <>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchFormButton}>\n          <span className={styles.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Поиск изображений и фото\"\n          onChange={onChange}\n          value={query}\n        />\n      </form>\n\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link\n                  className={styles.movieLink}\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: { from: location },\n                  }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}