{"version":3,"sources":["components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.jsx"],"names":["module","exports","Cast","lazy","Reviews","MovieDetails","history","useHistory","location","useLocation","movieId","useParams","url","useRouteMatch","useState","info","setInfo","useEffect","a","moviesApi","fetchMovieById","response","fecthMovieInfo","className","styles","goBackBtn","type","onClick","push","state","from","moviePosterImg","src","poster_path","alt","title","movieInfo","vote_average","vote_count","overview","genres","map","genre","name","join","to","addInfoLink","activeClassName","activeInfoLink","fallback","color","height","width","path"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,eAAiB,qCAAqC,UAAY,gCAAgC,YAAc,kCAAkC,eAAiB,qCAAqC,UAAY,kC,0LCelRC,EAAOC,gBAAK,kBAChB,gCAEIC,EAAUD,gBAAK,kBACnB,gCAKa,SAASE,IACtB,IAAMC,EAAUC,cACVC,EAAWC,cACTC,EAAYC,cAAZD,QACAE,EAAQC,cAARD,IACR,EAAwBE,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,qBAAU,WAAM,4CAKd,4BAAAC,EAAA,sEACyBC,IAAUC,eAAeV,GADlD,OACQW,EADR,OAEEL,EAAQK,GAFV,4CALc,sBACVN,GADU,mCAUdO,KACC,CAACP,EAAML,IAOR,mCACGK,GACC,qCACE,wBAAQQ,UAAWC,IAAOC,UAAWC,KAAK,SAASC,QAR3D,WAAqB,IAAD,IAClBrB,EAAQsB,KAAR,iBAAapB,QAAb,IAAaA,GAAb,UAAaA,EAAUqB,aAAvB,aAAa,EAAiBC,YAA9B,QAAsC,MAOhC,4CAGA,sBAAKP,UAAWC,IAAOnB,aAAvB,UACE,qBACEkB,UAAWC,IAAOO,eAClBC,IAAG,0CAAqCjB,EAAKkB,aAC7CC,IAAKnB,EAAKoB,QAEZ,sBAAKZ,UAAWC,IAAOY,UAAvB,UACE,6BAAKrB,EAAKoB,QACV,uEACWpB,EAAKsB,aADhB,KACgCtB,EAAKuB,WADrC,OAGA,kFACA,4BAAIvB,EAAKwB,WACT,gEACCxB,EAAKyB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,YAG/C,gCACE,gHACA,+BACE,6BACE,cAAC,IAAD,CACEC,GAAE,UAAKjC,EAAL,SACFW,UAAWC,IAAOsB,YAClBC,gBAAiBvB,IAAOwB,eAH1B,oDAQF,6BACE,cAAC,IAAD,CACEH,GAAE,UAAKjC,EAAL,YACFW,UAAWC,IAAOsB,YAClBC,gBAAiBvB,IAAOwB,eAH1B,uEAUJ,cAAC,WAAD,CACEC,SACE,cAAC,IAAD,CACE1B,UAAU,SACVG,KAAK,OACLwB,MAAM,mBACNC,OAAQ,IACRC,MAAO,MAPb,SAWE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAI,UAAKzC,EAAL,SAAX,SACE,cAACV,EAAD,CAAMQ,QAASA,MAEjB,cAAC,IAAD,CAAO2C,KAAI,UAAKzC,EAAL,YAAX,SACE,cAACR,EAAD,CAASM,QAASA","file":"static/js/MovieDetails.cd4e74bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieDetails\":\"MovieDetails_MovieDetails__3RsBP\",\"moviePosterImg\":\"MovieDetails_moviePosterImg__oh9y5\",\"movieInfo\":\"MovieDetails_movieInfo__2mHxA\",\"addInfoLink\":\"MovieDetails_addInfoLink__3WSGg\",\"activeInfoLink\":\"MovieDetails_activeInfoLink__38Gw8\",\"goBackBtn\":\"MovieDetails_goBackBtn__1uZDU\"};","import { useState, lazy, Suspense, useEffect } from 'react';\nimport {\n  NavLink,\n  Switch,\n  Route,\n  useParams,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n} from 'react-router-dom';\nimport Loader from 'react-loader-spinner';\nimport moviesApi from 'utils/MoviesApi';\nimport styles from 'components/MovieDetails/MovieDetails.module.css';\n// import Cast from './Cast/Cast';\n// import Reviews from './Reviews/Reviews';\n\nconst Cast = lazy(() =>\n  import('components/MovieDetails/Cast/Cast' /* webpackChunkName: 'Cast' */),\n);\nconst Reviews = lazy(() =>\n  import(\n    'components/MovieDetails/Reviews/Reviews' /* webpackChunkName: 'Reviews' */\n  ),\n);\n\nexport default function MovieDetails() {\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const { url } = useRouteMatch();\n  const [info, setInfo] = useState(null);\n\n  useEffect(() => {\n    if (info) {\n      return;\n    }\n\n    async function fecthMovieInfo() {\n      const response = await moviesApi.fetchMovieById(movieId);\n      setInfo(response);\n    }\n\n    fecthMovieInfo();\n  }, [info, movieId]);\n\n  function onGoBack() {\n    history.push(location?.state?.from ?? '/');\n  }\n\n  return (\n    <>\n      {info && (\n        <>\n          <button className={styles.goBackBtn} type=\"button\" onClick={onGoBack}>\n            Назад\n          </button>\n          <div className={styles.MovieDetails}>\n            <img\n              className={styles.moviePosterImg}\n              src={`https://image.tmdb.org/t/p/w500/${info.poster_path}`}\n              alt={info.title}\n            />\n            <div className={styles.movieInfo}>\n              <h2>{info.title}</h2>\n              <p>\n                Оценка: {info.vote_average} ({info.vote_count})\n              </p>\n              <h3>Описание</h3>\n              <p>{info.overview}</p>\n              <h3>Жанры</h3>\n              {info.genres.map(genre => genre.name).join(', ')}\n            </div>\n          </div>\n          <div>\n            <p>Дополнительно:</p>\n            <ul>\n              <li>\n                <NavLink\n                  to={`${url}/cast`}\n                  className={styles.addInfoLink}\n                  activeClassName={styles.activeInfoLink}\n                >\n                  Актеры\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={`${url}/reviews`}\n                  className={styles.addInfoLink}\n                  activeClassName={styles.activeInfoLink}\n                >\n                  Ревизии (English)\n                </NavLink>\n              </li>\n            </ul>\n\n            <Suspense\n              fallback={\n                <Loader\n                  className=\"Loader\"\n                  type=\"Oval\"\n                  color=\"rgb(0, 224, 217)\"\n                  height={100}\n                  width={100}\n                />\n              }\n            >\n              <Switch>\n                <Route path={`${url}/cast`}>\n                  <Cast movieId={movieId} />\n                </Route>\n                <Route path={`${url}/reviews`}>\n                  <Reviews movieId={movieId} />\n                </Route>\n              </Switch>\n            </Suspense>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n"],"sourceRoot":""}